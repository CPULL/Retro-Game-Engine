**************** TODO ********************************************************************************

Documentation on the Wiki of Github
Audio: have the wave generation to be perfectly cyclic so we will avoid "thicks" when the sample is regenerated


FUTURE: step by step debugger
FUTURE: precompile Nodes
FUTURE: Font editor
FUTURE: Custom fonts
FUTURE: Favorites in FileBrowser
FUTURE: map keys
FUTURE: load/save capabilities



Add "Edit" buttons in RomEdit (music, tilemap)

Add global TryCatch in Dev tools
Handle loading errors (data size is shorter than expected): music, arcade


In music editor add a few empty lines at begin and end of the view, and have some sort of highlighted line on the center


Bug: We had some spurious tiles in a tilemap when the items were deleted
Bug: wait() should not block the framerate


[DECIDE] Rom Editor: have a way to add some raw binary data (loading a file or using some sort of text or hex editor)


CodeEditor: Ctrl+F find
CodeEditor: Ctrl+H replace

CodeEditor: Save code, text and binary
CodeEditor: Load code, text and binary

CodeEditor: add Arcade
CodeEditor: add variables and values
CodeEditor: add working breakpoints
CodeEditor: Start/Stop
CodeEditor: Show errors in a better place
CodeEditor: Add "rom" to current developed project


Rom editor: Add a button to remove all selected lines

Implement breakpoints (while running the code)
View memory

In Arcade, have  away to pop out the error messages, so we can show them directly in the dev tools


// Real time debugging
Start</color> {
	runs = 1000
}
Update {
	runs--
	Clr(0)
	Write(runs, 10, 10, 500c)
	a = Sin(6.28 * runs / 1000)
	Write(a, 50, 30, 550c)
	Wait(0.3)
}
